
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
 id             Int        @id @default(autoincrement())
 telegramId     String     @unique
 userName       String
 isActive       Boolean    @default(true)
 root           Boolean    @default(false)
 profile        Profile?
 profileFilled  Boolean    @default(false)
 createdAt      DateTime   @default(now())
 updatedAt      DateTime   @updatedAt
 executorOrders OrderExecutor[] // Добавляем связь с исполнительными заказами
}

model Profile {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int        @unique
  telegramId   String     @unique
  fullName     String?
  phone        String?    @unique
  userAvatar   String?
  role         Role       @default(user)
  rating       Int        @default(5)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

}

model Order {
 id                 Int      @id @default(autoincrement())
 createdBy          String   // Добавляем поле для указания создателя заказа
 startTime          String
 numExecutors       Int      @default(1)
 address            String?
 text               String
 hourCost           Int      @default(500)
 hourCount          Int      @default(1)
 createdAt          DateTime @default(now())
 updatedAt          DateTime @updatedAt
 potentialExecutors String[]
 executors          OrderExecutor[] // Указываем, что у заказа может быть несколько исполнителей
 status             String   @default("created") // Добавляем поле для отслеживания статуса заказа
}

model OrderExecutor {
 orderId    Int
 userId     String
 order      Order @relation(fields: [orderId], references: [id])
 user       User @relation(fields: [userId], references: [telegramId])

 @@id([orderId, userId])
}

enum Role {
  user
  loader
  foreman
  admin
}

enum OrderStatus {
 created
 inProgress
 completed
}
